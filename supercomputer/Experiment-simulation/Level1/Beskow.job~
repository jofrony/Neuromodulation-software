#!/bin/bash -l
#SBATCH -t 0:39:00
#SBATCH --time-min=0:19:00
#SBATCH -J snudda_simulate
#SBATCH -A 2020-5-449
#SBATCH -o save/output-snudda_simulate.o%j
#SBATCH -e save/error-snudda_simulate.e%j
#SBATCH --nodes=2
#SBATCH --ntasks-per-node=32

# 16 workers were too few, got section stack overflow (there is a hidden
# push to the stack somewhere in the neuron code)
let N_WORKERS="$SLURM_NNODES * 32"

HOME=/cfs/klemming/nobackup/"${USER:0:1}"/$USER/Snudda

# Synapse file
SNUDDA_DIR=/cfs/klemming/nobackup/"${USER:0:1}"/$USER/Snudda/snudda

# You need to point this as the directory where you created the network in
#NETWORK_DIR=$SNUDDA_DIR/../../networks/TegnerRun.959380
NETWORK_DIR=/cfs/klemming/nobackup/${USER:0:1}/$USER/Snudda/networks/TegnerNetwork

NETWORK_INFO_FILE=$NETWORK_DIR/network-synapses.hdf5
NETWORK_INPUT_FILE=$NETWORK_DIR/input-spikes.hdf5
NETWORK_VOLTAGE_FILE=$NETWORK_DIR/simulation/voltage-trace-${SLURM_JOBID}.txt

echo "Network dir: "$NETWORK_DIR


NEUROMODSOFT=/cfs/klemming/nobackup/${USER:0:1}/$USER/BasalGangliaExperiments/Neuromodulation-software/
DOPAMINELEVELONE=$NEUROMODSOFT/supercomputer/Experiment-simulation/Dopamine-level1/
JOBDIR=$DOPAMINELEVELONE/pdc_network
PROJECT_CODE=$NEUROMODSOFT/network-wide-code/project_wide
SNUDDA_DIR=/cfs/klemming/nobackup/${USER:0:1}/$USER/Snudda/snudda
JOBDIR=pdc_network


##############

source activate_miniconda.sh

module load snic-env

# --- I have tried with the gnu compiler, and also with the cray compiler
module swap PrgEnv-cray PrgEnv-gnu
module unload cray-libsci atp
export CRAYPE_LINK_TYPE=dynamic
export CRAY_ROOTFS=DSL

conda activate


L=/cfs/klemming/nobackup/${USER:0:1}/$USER/local/$SNIC_RESOURCE
LM=$L/miniconda3
LN=$L/neuron

export PATH=$LM/bin:$LN/bin:$PATH
export LD_LIBRARY_PATH=$MPICH_DIR/lib:$LD_LIBRARY_PATH
export PYTHONPATH=$L/lib/python3.8/site-packages:$PYTHONPATH
export PYTHONPATH=$LN/lib/python:$LM/lib/python3.8/

rm -r x86_64
nrnivmodl mechanisms-modulation/

echo 'Running'
srun -n $N_WORKERS $DOPAMINELEVELONE/x86_64/special -python $DOPAMINELEVELONE/simulation.py $DOPAMINELEVELONE/pdc_network $NEUROMODSOFT/network_parameters/modulation/dopamine_alpha_transient.json 10 "DA-network-level1-a"
